    $scope.SubmitModerateList = function () {
        //if ($scope.SubmitEnable == true) {
        var flag = true
        if ($scope.SelectedPublishArray.length > 0) {
            for (var i in $scope.SelectedPublishArray) {
                if ($scope.SelectedPublishArray[i].cm_state == 5) {
                    $scope.CommentPopUpShow = true;
                    flag = false;
                }
            }
            if (flag) {
                if (confirm("Are you sure want to submit all changes?")) {
                    var get_request = $http({
                        method: "Post",
                        url: 'contentcatalog/SubmitModerator',
                        data: $scope.SelectedPublishArray,
                        headers: { 'Content-Type': 'application/json' }
                    });
                    get_request.success(function (datas) {
                        console.log(datas);
                        if (datas.Result == "Update Moderate") {
                            console.log("Update Moderate");
                            for (var i in $scope.FilterModerateWallpaperList) {
                                for (var j in $scope.SelectedPublishArray) {
                                    if ($scope.SelectedPublishArray[j].cm_id != 3) {
                                        if ($scope.FilterModerateWallpaperList[i].cm_id == $scope.SelectedPublishArray[j].cm_id) {
                                            $scope.FilterModerateWallpaperList.splice(i, 1);
                                        }
                                    }
                                }
                            }

                            for (var i in $scope.ContentMetadata) {
                                for (var j in $scope.SelectedPublishArray) {
                                    if ($scope.ContentMetadata[i].cm_id == $scope.SelectedPublishArray[j].cm_id) {
                                        if ($scope.SelectedPublishArray[j].cm_state == 4) {
                                            $scope.ContentMetadata[i].cm_state = 4;
                                        }
                                        if ($scope.SelectedPublishArray[j].cm_state == 5) {
                                            $scope.ContentMetadata[i].cm_state = 5;
                                        }
                                    }
                                }
                            }
                            $scope.SelectedPublishArray = [];
                            $scope.newArray = [];
                        }
                    });
                    get_request.error(function (datas, status, headers, config) {
                        if (datas != undefined) {
                            //ngProgress.complete();
                            $scope.connectionError = true;
                            $scope.error = datas.substring(1, datas.length - 1);
                        }
                    });
                }
            }
        }

        //}
        //}
        //else {
        //    if (confirm("Are you sure want to submit all changes?")) {

        //    }
        //}
    }

    $scope.SaveComment = function () {
        $scope.CommentPopUpShow = false;
        
        if (confirm("Are you sure want to submit all changes?")) {

            for (var i in $scope.SelectedPublishArray) {
            if ($scope.SelectedPublishArray[i].cm_state == 5) {
                if ($scope.CommentTextValue != "") {
                    $scope.SelectedPublishArray[i].Comment = $scope.CommentTextValue;
                }
                else {
                    $scope.SelectedPublishArray[i].Comment = null;
                }
            }
        }

            var get_request = $http({
                method: "Post",
                url: 'contentcatalog/SubmitModerator',
                data: $scope.SelectedPublishArray,
                headers: { 'Content-Type': 'application/json' }
            });
            get_request.success(function (datas) {
                console.log(datas);
                if (datas.Result == "Update Moderate") {
                    console.log("Update Moderate");
                    for (var i in $scope.FilterModerateWallpaperList) {
                        for (var j in $scope.SelectedPublishArray) {
                            if ($scope.SelectedPublishArray[j].cm_id != 3) {
                                if ($scope.FilterModerateWallpaperList[i].cm_id == $scope.SelectedPublishArray[j].cm_id) {
                                    $scope.FilterModerateWallpaperList.splice(i, 1);
                                }
                            }
                        }
                    }

                    for (var i in $scope.ContentMetadata) {
                        for (var j in $scope.SelectedPublishArray) {
                            if ($scope.ContentMetadata[i].cm_id == $scope.SelectedPublishArray[j].cm_id) {
                                if ($scope.SelectedPublishArray[j].cm_state == 4) {
                                    $scope.ContentMetadata[i].cm_state = 4;
                                }
                                if ($scope.SelectedPublishArray[j].cm_state == 5) {
                                    $scope.ContentMetadata[i].cm_state = 5;
                                    $scope.ContentMetadata[i].cm_comment = $scope.CommentTextValue; ;
                                }
                            }
                        }
                    }
                    $scope.SelectedPublishArray = [];
                    $scope.newArray = [];
                    $scope.CommentTextValue = "";
                }
            });
            get_request.error(function (datas, status, headers, config) {
                if (datas != undefined) {
                    //ngProgress.complete();
                    $scope.connectionError = true;
                    $scope.error = datas.substring(1, datas.length - 1);
                }
            });
        }
        else {
            $scope.CommentTextValue = "";
        }
    }


=============================

    $scope.SearchOperation = function (data) {
        if (data.cm_title.toString().toLowerCase().indexOf($scope.SearchTextValue.toLowerCase()) !== -1) {
            return data;
        }
        else {
            return data;
        }
    }



       $scope.exportCUPWallpaperContentCatalog = function (tableId) {
        var type = $scope.getSelectedType();
        var contentCatalogExport = [];
        $scope.FilterPendingWallpaperList.forEach(function (data) {
            if (data.cm_title.toString().toLowerCase().indexOf($scope.SearchContent) !== -1) {
                contentCatalogExport.push(data);
            }
        });

        var post_request = $http({
            method: "Post",
            url: 'exportExcel/exportCUPWallpaperContentCatalogExcel',
            data: { contentCatalogExport: contentCatalogExport },
            headers: {
                'Content-type': 'application/json'
            },
            responseType: 'arraybuffer'
        });
        post_request.success(function (data) {
            var blob = new Blob([data], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8" });
            window.saveAs(blob, 'fileUploadPending' + type + 'List.xlsx');
            //var objectUrl = URL.createObjectURL(blob);
            //window.location.href = objectUrl;
        });

        post_request.error(function (data, status, headers, config) {
            if (data != undefined) {
                $scope.connectionError = true;
                console.log(data);
            }
        });
    }

    $scope.exportInPWallpaperContentCatalog = function (tableId) {
        var type = $scope.getSelectedType();
        var contentCatalogExport = [];
        $scope.FilterInProgressList.forEach(function (data) {
            if (data.cm_title.toString().toLowerCase().indexOf($scope.SearchContent) !== -1) {
                contentCatalogExport.push(data);
            }
        });

        var post_request = $http({
            method: "Post",
            url: 'exportExcel/exportInPWallpaperContentCatalogExcel',
            data: { contentCatalogExport: contentCatalogExport },
            headers: {
                'Content-type': 'application/json'
            },
            responseType: 'arraybuffer'
        });
        post_request.success(function (data) {
            var blob = new Blob([data], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8" });
            window.saveAs(blob, 'inProcess' + type + 'List.xlsx');
            //var objectUrl = URL.createObjectURL(blob);
            //window.location.href = objectUrl;
        });

        post_request.error(function (data, status, headers, config) {
            if (data != undefined) {
                $scope.connectionError = true;
                console.log(data);
            }
        });
    }

    $scope.exportRTMWallpaperContentCatalog = function (tableId) {
        var type = $scope.getSelectedType();
        var contentCatalogExport = [];
        $scope.FilterModerateWallpaperList.forEach(function (data) {
            if (data.cm_title.toString().toLowerCase().indexOf($scope.SearchContent) !== -1) {
                contentCatalogExport.push(data);
            }
        });

        var post_request = $http({
            method: "Post",
            url: 'exportExcel/exportRTMWallpaperContentCatalogExcel',
            data: { contentCatalogExport: contentCatalogExport },
            headers: {
                'Content-type': 'application/json'
            },
            responseType: 'arraybuffer'
        });
        post_request.success(function (data) {
            var blob = new Blob([data], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8" });
            window.saveAs(blob, 'readyToModerate' + type + 'List.xlsx');
            //var objectUrl = URL.createObjectURL(blob);
            //window.location.href = objectUrl;
        });

        post_request.error(function (data, status, headers, config) {
            if (data != undefined) {
                $scope.connectionError = true;
                console.log(data);
            }
        });
    }

    $scope.exportPubWallpaperContentCatalog = function (tableId) {
        var type = $scope.getSelectedType();
        var contentCatalogExport = [];
        $scope.FilterPublishedWallpaperList.forEach(function (data) {
            if (data.cm_title.toString().toLowerCase().indexOf($scope.SearchContent) !== -1) {
                contentCatalogExport.push(data);
            }
        });

        var post_request = $http({
            method: "Post",
            url: 'exportExcel/exportPubWallpaperContentCatalogExcel',
            data: { contentCatalogExport: contentCatalogExport },
            headers: {
                'Content-type': 'application/json'
            },
            responseType: 'arraybuffer'
        });
        post_request.success(function (data) {
            var blob = new Blob([data], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8" });
            window.saveAs(blob, 'published' + type + 'List.xlsx');
            //var objectUrl = URL.createObjectURL(blob);
            //window.location.href = objectUrl;
        });

        post_request.error(function (data, status, headers, config) {
            if (data != undefined) {
                $scope.connectionError = true;
                console.log(data);
            }
        });
    }

    $scope.exportRejWallpaperContentCatalog = function (tableId) {
        var type = $scope.getSelectedType();
        var contentCatalogExport = [];
        $scope.FilterRejectWallpaperList.forEach(function (data) {
            if (data.cm_title.toString().toLowerCase().indexOf($scope.SearchContent) !== -1) {
                contentCatalogExport.push(data);
            }
        });
        var post_request = $http({
            method: "Post",
            url: 'exportExcel/exportRejWallpaperContentCatalogExcel',
            data: { contentCatalogExport: contentCatalogExport },
            headers: {
                'Content-type': 'application/json'
            },
            responseType: 'arraybuffer'
        });
        post_request.success(function (data) {
            var blob = new Blob([data], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8" });
            window.saveAs(blob, 'rejected' + type + 'List.xlsx');
            //var objectUrl = URL.createObjectURL(blob);
            //window.location.href = objectUrl;
        });

        post_request.error(function (data, status, headers, config) {
            if (data != undefined) {
                $scope.connectionError = true;
                console.log(data);
            }
        });
    }

    $scope.exportInaWallpaperContentCatalog = function (tableId) {
        var type = $scope.getSelectedType();
        var contentCatalogExport = [];
        $scope.FilterInActiveWallpaperList.forEach(function (data) {
            if (data.cm_title.toString().toLowerCase().indexOf($scope.SearchContent) !== -1) {
                contentCatalogExport.push(data);
            }
        });

        var post_request = $http({
            method: "Post",
            url: 'exportExcel/exportInaWallpaperContentCatalogExcel',
            data: { contentCatalogExport: contentCatalogExport },
            headers: {
                'Content-type': 'application/json'
            },
            responseType: 'arraybuffer'
        });
        post_request.success(function (data) {
            var blob = new Blob([data], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8" });
            window.saveAs(blob, 'inactive' + type + 'List.xlsx');
            //var objectUrl = URL.createObjectURL(blob);
            //window.location.href = objectUrl;
        });

        post_request.error(function (data, status, headers, config) {
            if (data != undefined) {
                $scope.connectionError = true;
                console.log(data);
            }
        });
    }

    $scope.exportDelWallpaperContentCatalog = function (tableId) {
        var type = $scope.getSelectedType();
        var contentCatalogExport = [];
        $scope.FilterDeletedWallpaperList.forEach(function (data) {
            if (data.cm_title.toString().toLowerCase().indexOf($scope.SearchContent) !== -1) {
                contentCatalogExport.push(data);
            }
        });

        var post_request = $http({
            method: "Post",
            url: 'exportExcel/exportDelWallpaperContentCatalogExcel',
            data: { contentCatalogExport: contentCatalogExport },
            headers: {
                'Content-type': 'application/json'
            },
            responseType: 'arraybuffer'
        });
        post_request.success(function (data) {
            var blob = new Blob([data], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8" });
            window.saveAs(blob, 'deleted' + type + 'List.xlsx');
            //var objectUrl = URL.createObjectURL(blob);
            //window.location.href = objectUrl;
        });

        post_request.error(function (data, status, headers, config) {
            if (data != undefined) {
                $scope.connectionError = true;
                console.log(data);
            }
        });
    }